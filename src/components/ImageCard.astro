---
import ButtonLink from "./ButtonLink.astro";
interface Props {
  imgSrc: string;
  imgAlt: string;
  title?: string;
  description?: string;
  link?: string;
  size?: "small" | "large";
}

const {
  imgSrc = "",
  imgAlt = "",
  title = "",
  description = "",
  link = "",
  size = "small",
} = Astro.props;
---

<article class={size === "large" ? "image-card-large" : "image-card-small"}>
  <a href={link} class="image-card-link"><img decoding="async" loading="lazy" src={imgSrc} alt={imgAlt} /></a>
  <div class="card-content">
    <a href={link} class="image-card-link"><h3 class="title">{title}</h3></a>
    <p class="description">{description}</p>
  </div>
</article>

<style>
  .image-card-small, .image-card-large {
    flex: 1 1 100%;
    margin: 0.5rem;
    border-radius: 4px;
    text-align: left;
  }

  .image-card-large {
    margin: 0 auto;
    text-align: center;
    margin-bottom: 1rem;
  }

  .image-card-link {
    text-decoration: none;
    transition: all 0.2s ease-in-out;
  }

  .image-card-link:hover {
    color: var(--color-gold);
  }

  .image-card-small img, .image-card-large img {
    width: 100%;
    height: auto;
    border-radius: 1rem;
    transition: all 0.2s ease-in-out;
  }

  .image-card-large img {
    max-width: 600px;
  }

  .image-card-small img:hover, .image-card-large img:hover {
    transform: scale(1.1);
  }


  .card-content {
    padding: 1rem;
  }

  .title {
    font-size: var(--font-size-1);
    font-family: var(--font-secondary);
    color: var(--color-green);
    font-weight: 600;
    transition: all 0.2s ease-in-out;
  }

  .title:hover {
    color: var(--color-gold);
  }

  .description {
    margin: 0;
    font-size: var(--font-size-4);
    font-family: var(--font-primary);
    font-weight: 500;
    color: var(--color-dark-grey);
  }

  @media (min-width: 768px) {
    .image-card-small {
      flex: 1 1 48%;
    }
  }
</style>
